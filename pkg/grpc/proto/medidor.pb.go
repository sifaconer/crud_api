// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: medidor.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medidor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_medidor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_medidor_proto_rawDescGZIP(), []int{0}
}

type UUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UUID) Reset() {
	*x = UUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medidor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUID) ProtoMessage() {}

func (x *UUID) ProtoReflect() protoreflect.Message {
	mi := &file_medidor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUID.ProtoReflect.Descriptor instead.
func (*UUID) Descriptor() ([]byte, []int) {
	return file_medidor_proto_rawDescGZIP(), []int{1}
}

func (x *UUID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Serial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serial string `protobuf:"bytes,1,opt,name=serial,proto3" json:"serial,omitempty"`
}

func (x *Serial) Reset() {
	*x = Serial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medidor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Serial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Serial) ProtoMessage() {}

func (x *Serial) ProtoReflect() protoreflect.Message {
	mi := &file_medidor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Serial.ProtoReflect.Descriptor instead.
func (*Serial) Descriptor() ([]byte, []int) {
	return file_medidor_proto_rawDescGZIP(), []int{2}
}

func (x *Serial) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

type Medidor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Brand                string `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	Address              string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	UnixInstallationDate int64  `protobuf:"varint,4,opt,name=unix_installation_date,json=unixInstallationDate,proto3" json:"unix_installation_date,omitempty"`
	UnixRetirementDate   *int64 `protobuf:"varint,5,opt,name=unix_retirement_date,json=unixRetirementDate,proto3,oneof" json:"unix_retirement_date,omitempty"`
	Serial               string `protobuf:"bytes,6,opt,name=serial,proto3" json:"serial,omitempty"`
	Lines                uint32 `protobuf:"varint,7,opt,name=lines,proto3" json:"lines,omitempty"`
	IsActive             bool   `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *Medidor) Reset() {
	*x = Medidor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medidor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Medidor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Medidor) ProtoMessage() {}

func (x *Medidor) ProtoReflect() protoreflect.Message {
	mi := &file_medidor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Medidor.ProtoReflect.Descriptor instead.
func (*Medidor) Descriptor() ([]byte, []int) {
	return file_medidor_proto_rawDescGZIP(), []int{3}
}

func (x *Medidor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Medidor) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Medidor) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Medidor) GetUnixInstallationDate() int64 {
	if x != nil {
		return x.UnixInstallationDate
	}
	return 0
}

func (x *Medidor) GetUnixRetirementDate() int64 {
	if x != nil && x.UnixRetirementDate != nil {
		return *x.UnixRetirementDate
	}
	return 0
}

func (x *Medidor) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *Medidor) GetLines() uint32 {
	if x != nil {
		return x.Lines
	}
	return 0
}

func (x *Medidor) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type ResponseMedidor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Brand                string `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	Address              string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	UnixInstallationDate int64  `protobuf:"varint,4,opt,name=unix_installation_date,json=unixInstallationDate,proto3" json:"unix_installation_date,omitempty"`
	UnixRetirementDate   *int64 `protobuf:"varint,5,opt,name=unix_retirement_date,json=unixRetirementDate,proto3,oneof" json:"unix_retirement_date,omitempty"`
	Serial               string `protobuf:"bytes,6,opt,name=serial,proto3" json:"serial,omitempty"`
	Lines                uint32 `protobuf:"varint,7,opt,name=lines,proto3" json:"lines,omitempty"`
	IsActive             bool   `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	UnixCreatedAt        int64  `protobuf:"varint,9,opt,name=unix_created_at,json=unixCreatedAt,proto3" json:"unix_created_at,omitempty"`
}

func (x *ResponseMedidor) Reset() {
	*x = ResponseMedidor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medidor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMedidor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMedidor) ProtoMessage() {}

func (x *ResponseMedidor) ProtoReflect() protoreflect.Message {
	mi := &file_medidor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMedidor.ProtoReflect.Descriptor instead.
func (*ResponseMedidor) Descriptor() ([]byte, []int) {
	return file_medidor_proto_rawDescGZIP(), []int{4}
}

func (x *ResponseMedidor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResponseMedidor) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *ResponseMedidor) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ResponseMedidor) GetUnixInstallationDate() int64 {
	if x != nil {
		return x.UnixInstallationDate
	}
	return 0
}

func (x *ResponseMedidor) GetUnixRetirementDate() int64 {
	if x != nil && x.UnixRetirementDate != nil {
		return *x.UnixRetirementDate
	}
	return 0
}

func (x *ResponseMedidor) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *ResponseMedidor) GetLines() uint32 {
	if x != nil {
		return x.Lines
	}
	return 0
}

func (x *ResponseMedidor) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ResponseMedidor) GetUnixCreatedAt() int64 {
	if x != nil {
		return x.UnixCreatedAt
	}
	return 0
}

type ArrayMedidor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Medidor []*ResponseMedidor `protobuf:"bytes,1,rep,name=Medidor,proto3" json:"Medidor,omitempty"`
}

func (x *ArrayMedidor) Reset() {
	*x = ArrayMedidor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medidor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayMedidor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayMedidor) ProtoMessage() {}

func (x *ArrayMedidor) ProtoReflect() protoreflect.Message {
	mi := &file_medidor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayMedidor.ProtoReflect.Descriptor instead.
func (*ArrayMedidor) Descriptor() ([]byte, []int) {
	return file_medidor_proto_rawDescGZIP(), []int{5}
}

func (x *ArrayMedidor) GetMedidor() []*ResponseMedidor {
	if x != nil {
		return x.Medidor
	}
	return nil
}

var File_medidor_proto protoreflect.FileDescriptor

var file_medidor_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x64, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x16, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x9a, 0x02, 0x0a, 0x07, 0x4d, 0x65,
	0x64, 0x69, 0x64, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x75, 0x6e, 0x69, 0x78, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x14, 0x75,
	0x6e, 0x69, 0x78, 0x5f, 0x72, 0x65, 0x74, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x12, 0x75, 0x6e, 0x69,
	0x78, 0x52, 0x65, 0x74, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x17, 0x0a,
	0x15, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x72, 0x65, 0x74, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x22, 0xca, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x64, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x75, 0x6e,
	0x69, 0x78, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x75, 0x6e, 0x69, 0x78,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x35, 0x0a, 0x14, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x72, 0x65, 0x74, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x12, 0x75, 0x6e, 0x69, 0x78, 0x52, 0x65, 0x74, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x69,
	0x78, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x75,
	0x6e, 0x69, 0x78, 0x5f, 0x72, 0x65, 0x74, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x40, 0x0a, 0x0c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x64, 0x69,
	0x64, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x64, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x64, 0x6f, 0x72, 0x52, 0x07, 0x4d, 0x65,
	0x64, 0x69, 0x64, 0x6f, 0x72, 0x32, 0xeb, 0x02, 0x0a, 0x0f, 0x4d, 0x65, 0x64, 0x69, 0x64, 0x6f,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69,
	0x64, 0x6f, 0x72, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x64, 0x6f, 0x72, 0x22, 0x00, 0x12, 0x32, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x65, 0x64, 0x69, 0x64, 0x6f, 0x72, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x64, 0x6f, 0x72, 0x22,
	0x00, 0x12, 0x25, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x12,
	0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x64, 0x69, 0x64,
	0x6f, 0x72, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x04, 0x42, 0x79, 0x49, 0x44, 0x12, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x64, 0x6f,
	0x72, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x64, 0x6f, 0x72,
	0x22, 0x00, 0x12, 0x2f, 0x0a, 0x08, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x64, 0x69, 0x64, 0x6f,
	0x72, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x69, 0x66, 0x61, 0x63, 0x6f, 0x6e, 0x65, 0x72, 0x2f, 0x63, 0x72, 0x75, 0x64,
	0x5f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_medidor_proto_rawDescOnce sync.Once
	file_medidor_proto_rawDescData = file_medidor_proto_rawDesc
)

func file_medidor_proto_rawDescGZIP() []byte {
	file_medidor_proto_rawDescOnce.Do(func() {
		file_medidor_proto_rawDescData = protoimpl.X.CompressGZIP(file_medidor_proto_rawDescData)
	})
	return file_medidor_proto_rawDescData
}

var file_medidor_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_medidor_proto_goTypes = []interface{}{
	(*Empty)(nil),           // 0: proto.Empty
	(*UUID)(nil),            // 1: proto.UUID
	(*Serial)(nil),          // 2: proto.Serial
	(*Medidor)(nil),         // 3: proto.Medidor
	(*ResponseMedidor)(nil), // 4: proto.ResponseMedidor
	(*ArrayMedidor)(nil),    // 5: proto.ArrayMedidor
}
var file_medidor_proto_depIdxs = []int32{
	4, // 0: proto.ArrayMedidor.Medidor:type_name -> proto.ResponseMedidor
	3, // 1: proto.MedidorServices.Create:input_type -> proto.Medidor
	3, // 2: proto.MedidorServices.Update:input_type -> proto.Medidor
	1, // 3: proto.MedidorServices.Delete:input_type -> proto.UUID
	0, // 4: proto.MedidorServices.All:input_type -> proto.Empty
	1, // 5: proto.MedidorServices.ByID:input_type -> proto.UUID
	2, // 6: proto.MedidorServices.RecentInstallation:input_type -> proto.Serial
	0, // 7: proto.MedidorServices.Inactive:input_type -> proto.Empty
	4, // 8: proto.MedidorServices.Create:output_type -> proto.ResponseMedidor
	4, // 9: proto.MedidorServices.Update:output_type -> proto.ResponseMedidor
	0, // 10: proto.MedidorServices.Delete:output_type -> proto.Empty
	5, // 11: proto.MedidorServices.All:output_type -> proto.ArrayMedidor
	4, // 12: proto.MedidorServices.ByID:output_type -> proto.ResponseMedidor
	4, // 13: proto.MedidorServices.RecentInstallation:output_type -> proto.ResponseMedidor
	5, // 14: proto.MedidorServices.Inactive:output_type -> proto.ArrayMedidor
	8, // [8:15] is the sub-list for method output_type
	1, // [1:8] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_medidor_proto_init() }
func file_medidor_proto_init() {
	if File_medidor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_medidor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medidor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medidor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Serial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medidor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Medidor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medidor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMedidor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medidor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayMedidor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_medidor_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_medidor_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_medidor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_medidor_proto_goTypes,
		DependencyIndexes: file_medidor_proto_depIdxs,
		MessageInfos:      file_medidor_proto_msgTypes,
	}.Build()
	File_medidor_proto = out.File
	file_medidor_proto_rawDesc = nil
	file_medidor_proto_goTypes = nil
	file_medidor_proto_depIdxs = nil
}
